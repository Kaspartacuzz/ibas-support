@page "/"
@using IbasSupport.Web.Models
@using IbasSupport.Web.Services
@inject ISupportRepository SupportRepo
@inject NavigationManager Nav

@rendermode InteractiveServer

<div class="container py-4">
    <!-- HERO -->
    <div class="p-4 p-md-5 mb-4 bg-light rounded-3 border">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="display-6 fw-semibold mb-2">IBAS Support</h1>
                <p class="lead text-muted mb-3">
                    Opret og administrér support-henvendelser for cykelreparationer. Alle ID’er genereres automatisk – du fokuserer kun på indholdet.
                </p>
                <div class="d-flex gap-2">
                    <a class="btn btn-primary btn-lg" href="/CreateSupport">Opret ny henvendelse</a>
                    <a class="btn btn-outline-secondary btn-lg" href="/SupportList">Se oversigt</a>
                </div>
            </div>
            <div class="col-md-4 mt-4 mt-md-0">
                <div class="row g-3">
                    <div class="col-6">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <div class="text-muted small">Henvendelser</div>
                                <div class="h6 mb-0">@_stats.TotalText</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card text-center shadow-sm">
                            <div class="card-body">
                                <div class="text-muted small">Seneste kategori</div>
                                <div class="h6 mb-0">@_stats.LastCategoryText</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- SENESTE HENVENDELSER -->
    <div class="d-flex align-items-center justify-content-between mb-2">
        <h2 class="h5 mb-0">Seneste henvendelser</h2>
        <div>
            <button class="btn btn-sm btn-outline-secondary me-2" @onclick="Reload" disabled="@_loading">Opdater
            </button>
            <a class="btn btn-sm btn-primary" href="/support-list">Gå til oversigt</a>
        </div>
    </div>

    @if (_loading && _items.Count == 0)
    {
        <div class="text-muted">Henter data…</div>
    }
    else if (!string.IsNullOrEmpty(_error) && _items.Count == 0)
    {
        <div class="alert alert-danger">Kunne ikke hente henvendelser: @_error</div>
    }
    else if (_items.Count == 0)
    {
        <div class="alert alert-info">
            Ingen henvendelser endnu. <a href="/create-support">Opret den første</a>.
        </div>
    }
    else
    {
        <div class="table-responsive shadow-sm border rounded-3">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th style="width:110px;">Request #</th>
                        <th style="width:150px;">Dato</th>
                        <th style="width:160px;">Kategori</th>
                        <th style="width:240px;">Bruger</th>
                        <th>Beskrivelse</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var m in _items)
                    {
                        <tr role="button" @onclick="(() => GoToListWithCategory(m.category))">
                            <td>@(m.requestId?.ToString() ?? "-")</td>
                            <td>@m.dateTime.ToString("yyyy-MM-dd HH:mm")</td>
                            <td><span class="badge text-bg-secondary">@m.category</span></td>
                            <td>
                                <div>@m.user?.name</div>
                                <small class="text-muted">@m.user?.email</small>
                            </td>
                            <td>@Truncate(m.description, 100)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private bool _loading;
    private string? _error;
    private List<SupportMessage> _items = new();
    private (string TotalText, string LastCategoryText) _stats = ("–", "–");

    protected override async Task OnInitializedAsync()
        => await LoadAsync();

    private async Task Reload() => await LoadAsync();

    private async Task LoadAsync()
    {
        try
        {
            _loading = true;
            _error = null;
            _items.Clear();

            // Hent alle og vis de 5 seneste
            var all = await SupportRepo.GetAllAsync();
            _items = all
                .OrderByDescending(x => x.dateTime)
                .Take(5)
                .ToList();

            // Små “hero”-stats
            var total = all.Count;
            var lastCat = _items.FirstOrDefault()?.category ?? "–";
            _stats = (total.ToString(), lastCat);
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
    }

    private void GoToListWithCategory(string? category)
    {
        if (string.IsNullOrWhiteSpace(category))
            Nav.NavigateTo("/support-list");
        else
            Nav.NavigateTo("/support-list"); // evt. udvid senere med querystring ?category=...
    }

    private static string Truncate(string? value, int max)
    {
        if (string.IsNullOrEmpty(value)) return value ?? "";
        return value.Length <= max ? value : value[..max] + "…";
    }
}
